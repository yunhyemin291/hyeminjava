5 6 7 10 11 7 8 9

5 12 13 19 20 16 17 20 13 14 15

5 7 10(n=5) 11 13 15
10(n=4) 11 13 15(n=4일때 팩토리얼 호출)
10(n=3) 11 13 15
10(n=2) 11 13 15
10(n=1) 11 12
15(1팩토리얼 매서드를 빠져나와 2팩토리얼의 리턴으로 이동,n=2)
15(1팩토리얼 매서드를 빠져나와 2팩토리얼의 리턴으로 이동,n=2)
15(1팩토리얼 매서드를 빠져나와 2팩토리얼의 리턴으로 이동,n=2)
15(1팩토리얼 매서드를 빠져나와 2팩토리얼의 리턴으로 이동,n=2)
7(5팩토리얼의 값이 계산되어 나옴
8

상속-부모 클래스 한테 멤버변수나 멤버 메소드를 물러 받는 것
키워드:extends
상속은 클래스를 선언할 때 받는것

class 클래스면 evtend 부모 클래스명{
}
//멤버변수
//멤버메서드
//생성자

//상속 받은 클래스는 부모 클래스의
public 또는 protected로 되어 있눈 멤버 변수와 멤버 메서드를 사용할 수 있다.

생성자와 초기화 블럭 상속되지 않지만 부모의 생성자를 호출할 수 는 있다.

부모는 1명 가능


상속과 포함의 차이
상속은 자식이 사용할 수 없는것:private으로 된 메서드나 멤버변수 포함은클래스가 멤버변수에서 사용할 수 없는 것
private나 protected로 된 메서드나 멤버 변수

상속은 멤버변수(일반변수)를 사용하기 위해 초기화를 하지 않아도 된다.

포함:클래스A의 멤버 변수로 클래스 B의 객체가 오는 것
	Child클래스이 멤버변수로 Point클래스의 p1이 오는 것


public	:나+패키지+자식클래스들+일반클리새들
protected:나+패키지+자식클래스들
(default)	:나+패키지
private	:나

this()와 super()는 생성자 코드에서만 사용가능하다.
다른메서드에서는 사용할 수 없다.
this는 내 객체정보, this()는 내 생성자
super는 부모 객체정보,super()는 부모 생성자


