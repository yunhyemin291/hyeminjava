카메라 설계도	클래스
카메라		객체(인스턴스)
사진을 찍는다	메서드
렌즈,셔터		멤버변수

클래스
 -멤버변수 : 부품
 -메서드 : 기능
 -생성자 : 멤버변수의 초기화

접근제한자 class 클래스명 {
접근제한자 멤버변수;
접근제한자 메서드;
생성자;

}

접근제한자
 -public:누구나 사용 가능
 -private:나만 사용 가능, 일반적으로 클래스에 붙이지는 않는다.
 -protected:나+패키지+자식클래스
 -default:나+패키지

메서드 - 기능
접근제한자(static) 리턴타입 메서드명(매개변수들){

	구현;
	return
}
음료수 자판기		메서드
돈 메뉴			매개변수
음료수			리턴타입
매개변수:메서드를 실행하기 위해 필요한 최소한의 정보
리턴타입:매서드 종료 후 알려주는 정보의 자료형

생성자:멤버변수 초기화
//기본생성자
public 클래스명(){

}
//생성자 오버로딩
public 클래스명(매개변수){

}
이름이 같은 메서드나 생성자가 존재할 수 있다. 아래의 조건을 만족하면
-매개변수가 달라지는 경우
 1.매개변수의 갯수가 달라지는 경우
 2.매개변수의 타입이 달라지는 경우


변수
 -일반변수:실제 사용하는 값을 저장하는 변수
 -참조변수:주소를 저장하는 변수 => 누군가와 연결

 -지역변수
 -객체변수(멤버변수)
 -클래스변수

int num =10;
int []arr ;
Point1 p1;


클래스변수(static):객체 생성 없이 사용
클래스 메소드 
-객체 생성 없이 사용=>클래스명.메소드명()으로 사용
-클래스 메소드에는 객체변수를 사용할 수 없음
-클래스 메소드에는 객체메서드를 사용할 수 없음

객체변수 : 객체를 생성해야 사용 가능
객체메서드
-클래스 변수를 사용할 수 있다.


객체 지향 프로그래밍
-무언가를 할 때 객체를 만들어서 하는 것

다음 중 어느 내용이 객체지향에 해당하는가?
1.사진을 찍는다.<절차지향
2.카메라의 사진찍는 기능을 이용하여 사진을 찍는다.<객체지향

클래스	제품설계도
객체	제품
메서드	기능

-클래스의 구성 요소
1.멤버변수:속성,부품
 -객체변수
 -클래스변수
2.메서드:기능
 -객체메서드
 -클래스 메서드
3.생성자:초기화
 -기본
 -오버로딩


클래스:아이폰
 -클래스 변수:제조사
 -객체 변수:기기번호, 볼륨, 화면밝기,배터리잔량

 -클래스 메소드 : 아이폰 켰을 때 화면 띄우기
 -객체 메소드 : 배경화면 설정

 -생성자 : 아이폰을 만들 때 색상을 정해서 만듬


접근제한자:접근할 수 있는 여부를 결정하는 키워드
public:모두 사용 가능
 -클래스:무조건파일명과 클래스명이 같을 때
 -멤버변수:주로 상수일 때
 -메서드:대부분의 메서드가 public

privete :해당 클래스만 사용 가능
 -멤버변수:대부분의 멤버변수는 private으로 사용
 -메서드:다른 클래스에서 사용하는 메서드가 아니라 내부에서 사용하는 메서드인 경우(코드를 줄이기 위해서)

protected : 상속 받은 클래스+나+같은 패키지의 다른 클래스

():default:나+같은 패키지의 다른클래스

-클래스 생성방법
 접근제한자 class 클래스명{
	접근제한자 자료형 변수명;//멤버 변수
	접근제한자 static 자료형 변수명;// 클래스 변수
	
	접근제한자 리턴타입 메서드명(매개변수){//객체메서드
	}
	접근제한자 static 리턴차입 메서드명(매개변수){//클래스메서드
	}
	public클래스명(){
	}
	public 클래스명(매개변수){
	}
}

메서드 선언방법
접근제한자 static 리턴타입 메서드명(매개변수){

}